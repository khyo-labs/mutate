/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root';
import { Route as RegisterRouteImport } from './routes/register';
import { Route as LoginRouteImport } from './routes/login';
import { Route as JoinRouteImport } from './routes/join';
import { Route as ForgotPasswordRouteImport } from './routes/forgot-password';
import { Route as CreateMutationRouteImport } from './routes/create-mutation';
import { Route as CheckEmailRouteImport } from './routes/check-email';
import { Route as AdminRouteImport } from './routes/admin';
import { Route as SettingsRouteRouteImport } from './routes/settings/route';
import { Route as IndexRouteImport } from './routes/index';
import { Route as SettingsIndexRouteImport } from './routes/settings/index';
import { Route as MutationsIndexRouteImport } from './routes/mutations/index';
import { Route as AuthVerifyEmailRouteImport } from './routes/auth/verify-email';
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password';
import { Route as SettingsWorkspaceRouteRouteImport } from './routes/settings/workspace/route';
import { Route as SettingsAccountRouteRouteImport } from './routes/settings/account/route';
import { Route as SettingsWorkspaceIndexRouteImport } from './routes/settings/workspace/index';
import { Route as SettingsAccountIndexRouteImport } from './routes/settings/account/index';
import { Route as MutationsMutationIdIndexRouteImport } from './routes/mutations/$mutationId/index';
import { Route as SettingsWorkspaceWebhooksRouteImport } from './routes/settings/workspace/webhooks';
import { Route as SettingsWorkspaceMembersRouteImport } from './routes/settings/workspace/members';
import { Route as SettingsWorkspaceApiKeysRouteImport } from './routes/settings/workspace/api-keys';
import { Route as SettingsAccountSecurityRouteImport } from './routes/settings/account/security';
import { Route as SettingsAccountProfileRouteImport } from './routes/settings/account/profile';
import { Route as SettingsAccountAppearanceRouteImport } from './routes/settings/account/appearance';
import { Route as MutationsMutationIdEditRouteImport } from './routes/mutations/$mutationId/edit';

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any);
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any);
const JoinRoute = JoinRouteImport.update({
  id: '/join',
  path: '/join',
  getParentRoute: () => rootRouteImport,
} as any);
const ForgotPasswordRoute = ForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any);
const CreateMutationRoute = CreateMutationRouteImport.update({
  id: '/create-mutation',
  path: '/create-mutation',
  getParentRoute: () => rootRouteImport,
} as any);
const CheckEmailRoute = CheckEmailRouteImport.update({
  id: '/check-email',
  path: '/check-email',
  getParentRoute: () => rootRouteImport,
} as any);
const AdminRoute = AdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRouteImport,
} as any);
const SettingsRouteRoute = SettingsRouteRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any);
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any);
const SettingsIndexRoute = SettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SettingsRouteRoute,
} as any);
const MutationsIndexRoute = MutationsIndexRouteImport.update({
  id: '/mutations/',
  path: '/mutations/',
  getParentRoute: () => rootRouteImport,
} as any);
const AuthVerifyEmailRoute = AuthVerifyEmailRouteImport.update({
  id: '/auth/verify-email',
  path: '/auth/verify-email',
  getParentRoute: () => rootRouteImport,
} as any);
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRouteImport,
} as any);
const SettingsWorkspaceRouteRoute = SettingsWorkspaceRouteRouteImport.update({
  id: '/workspace',
  path: '/workspace',
  getParentRoute: () => SettingsRouteRoute,
} as any);
const SettingsAccountRouteRoute = SettingsAccountRouteRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => SettingsRouteRoute,
} as any);
const SettingsWorkspaceIndexRoute = SettingsWorkspaceIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SettingsWorkspaceRouteRoute,
} as any);
const SettingsAccountIndexRoute = SettingsAccountIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SettingsAccountRouteRoute,
} as any);
const MutationsMutationIdIndexRoute =
  MutationsMutationIdIndexRouteImport.update({
    id: '/mutations/$mutationId/',
    path: '/mutations/$mutationId/',
    getParentRoute: () => rootRouteImport,
  } as any);
const SettingsWorkspaceWebhooksRoute =
  SettingsWorkspaceWebhooksRouteImport.update({
    id: '/webhooks',
    path: '/webhooks',
    getParentRoute: () => SettingsWorkspaceRouteRoute,
  } as any);
const SettingsWorkspaceMembersRoute =
  SettingsWorkspaceMembersRouteImport.update({
    id: '/members',
    path: '/members',
    getParentRoute: () => SettingsWorkspaceRouteRoute,
  } as any);
const SettingsWorkspaceApiKeysRoute =
  SettingsWorkspaceApiKeysRouteImport.update({
    id: '/api-keys',
    path: '/api-keys',
    getParentRoute: () => SettingsWorkspaceRouteRoute,
  } as any);
const SettingsAccountSecurityRoute = SettingsAccountSecurityRouteImport.update({
  id: '/security',
  path: '/security',
  getParentRoute: () => SettingsAccountRouteRoute,
} as any);
const SettingsAccountProfileRoute = SettingsAccountProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => SettingsAccountRouteRoute,
} as any);
const SettingsAccountAppearanceRoute =
  SettingsAccountAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => SettingsAccountRouteRoute,
  } as any);
const MutationsMutationIdEditRoute = MutationsMutationIdEditRouteImport.update({
  id: '/mutations/$mutationId/edit',
  path: '/mutations/$mutationId/edit',
  getParentRoute: () => rootRouteImport,
} as any);

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute;
  '/settings': typeof SettingsRouteRouteWithChildren;
  '/admin': typeof AdminRoute;
  '/check-email': typeof CheckEmailRoute;
  '/create-mutation': typeof CreateMutationRoute;
  '/forgot-password': typeof ForgotPasswordRoute;
  '/join': typeof JoinRoute;
  '/login': typeof LoginRoute;
  '/register': typeof RegisterRoute;
  '/settings/account': typeof SettingsAccountRouteRouteWithChildren;
  '/settings/workspace': typeof SettingsWorkspaceRouteRouteWithChildren;
  '/auth/reset-password': typeof AuthResetPasswordRoute;
  '/auth/verify-email': typeof AuthVerifyEmailRoute;
  '/mutations': typeof MutationsIndexRoute;
  '/settings/': typeof SettingsIndexRoute;
  '/mutations/$mutationId/edit': typeof MutationsMutationIdEditRoute;
  '/settings/account/appearance': typeof SettingsAccountAppearanceRoute;
  '/settings/account/profile': typeof SettingsAccountProfileRoute;
  '/settings/account/security': typeof SettingsAccountSecurityRoute;
  '/settings/workspace/api-keys': typeof SettingsWorkspaceApiKeysRoute;
  '/settings/workspace/members': typeof SettingsWorkspaceMembersRoute;
  '/settings/workspace/webhooks': typeof SettingsWorkspaceWebhooksRoute;
  '/mutations/$mutationId': typeof MutationsMutationIdIndexRoute;
  '/settings/account/': typeof SettingsAccountIndexRoute;
  '/settings/workspace/': typeof SettingsWorkspaceIndexRoute;
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute;
  '/admin': typeof AdminRoute;
  '/check-email': typeof CheckEmailRoute;
  '/create-mutation': typeof CreateMutationRoute;
  '/forgot-password': typeof ForgotPasswordRoute;
  '/join': typeof JoinRoute;
  '/login': typeof LoginRoute;
  '/register': typeof RegisterRoute;
  '/auth/reset-password': typeof AuthResetPasswordRoute;
  '/auth/verify-email': typeof AuthVerifyEmailRoute;
  '/mutations': typeof MutationsIndexRoute;
  '/settings': typeof SettingsIndexRoute;
  '/mutations/$mutationId/edit': typeof MutationsMutationIdEditRoute;
  '/settings/account/appearance': typeof SettingsAccountAppearanceRoute;
  '/settings/account/profile': typeof SettingsAccountProfileRoute;
  '/settings/account/security': typeof SettingsAccountSecurityRoute;
  '/settings/workspace/api-keys': typeof SettingsWorkspaceApiKeysRoute;
  '/settings/workspace/members': typeof SettingsWorkspaceMembersRoute;
  '/settings/workspace/webhooks': typeof SettingsWorkspaceWebhooksRoute;
  '/mutations/$mutationId': typeof MutationsMutationIdIndexRoute;
  '/settings/account': typeof SettingsAccountIndexRoute;
  '/settings/workspace': typeof SettingsWorkspaceIndexRoute;
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport;
  '/': typeof IndexRoute;
  '/settings': typeof SettingsRouteRouteWithChildren;
  '/admin': typeof AdminRoute;
  '/check-email': typeof CheckEmailRoute;
  '/create-mutation': typeof CreateMutationRoute;
  '/forgot-password': typeof ForgotPasswordRoute;
  '/join': typeof JoinRoute;
  '/login': typeof LoginRoute;
  '/register': typeof RegisterRoute;
  '/settings/account': typeof SettingsAccountRouteRouteWithChildren;
  '/settings/workspace': typeof SettingsWorkspaceRouteRouteWithChildren;
  '/auth/reset-password': typeof AuthResetPasswordRoute;
  '/auth/verify-email': typeof AuthVerifyEmailRoute;
  '/mutations/': typeof MutationsIndexRoute;
  '/settings/': typeof SettingsIndexRoute;
  '/mutations/$mutationId/edit': typeof MutationsMutationIdEditRoute;
  '/settings/account/appearance': typeof SettingsAccountAppearanceRoute;
  '/settings/account/profile': typeof SettingsAccountProfileRoute;
  '/settings/account/security': typeof SettingsAccountSecurityRoute;
  '/settings/workspace/api-keys': typeof SettingsWorkspaceApiKeysRoute;
  '/settings/workspace/members': typeof SettingsWorkspaceMembersRoute;
  '/settings/workspace/webhooks': typeof SettingsWorkspaceWebhooksRoute;
  '/mutations/$mutationId/': typeof MutationsMutationIdIndexRoute;
  '/settings/account/': typeof SettingsAccountIndexRoute;
  '/settings/workspace/': typeof SettingsWorkspaceIndexRoute;
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath;
  fullPaths:
    | '/'
    | '/settings'
    | '/admin'
    | '/check-email'
    | '/create-mutation'
    | '/forgot-password'
    | '/join'
    | '/login'
    | '/register'
    | '/settings/account'
    | '/settings/workspace'
    | '/auth/reset-password'
    | '/auth/verify-email'
    | '/mutations'
    | '/settings/'
    | '/mutations/$mutationId/edit'
    | '/settings/account/appearance'
    | '/settings/account/profile'
    | '/settings/account/security'
    | '/settings/workspace/api-keys'
    | '/settings/workspace/members'
    | '/settings/workspace/webhooks'
    | '/mutations/$mutationId'
    | '/settings/account/'
    | '/settings/workspace/';
  fileRoutesByTo: FileRoutesByTo;
  to:
    | '/'
    | '/admin'
    | '/check-email'
    | '/create-mutation'
    | '/forgot-password'
    | '/join'
    | '/login'
    | '/register'
    | '/auth/reset-password'
    | '/auth/verify-email'
    | '/mutations'
    | '/settings'
    | '/mutations/$mutationId/edit'
    | '/settings/account/appearance'
    | '/settings/account/profile'
    | '/settings/account/security'
    | '/settings/workspace/api-keys'
    | '/settings/workspace/members'
    | '/settings/workspace/webhooks'
    | '/mutations/$mutationId'
    | '/settings/account'
    | '/settings/workspace';
  id:
    | '__root__'
    | '/'
    | '/settings'
    | '/admin'
    | '/check-email'
    | '/create-mutation'
    | '/forgot-password'
    | '/join'
    | '/login'
    | '/register'
    | '/settings/account'
    | '/settings/workspace'
    | '/auth/reset-password'
    | '/auth/verify-email'
    | '/mutations/'
    | '/settings/'
    | '/mutations/$mutationId/edit'
    | '/settings/account/appearance'
    | '/settings/account/profile'
    | '/settings/account/security'
    | '/settings/workspace/api-keys'
    | '/settings/workspace/members'
    | '/settings/workspace/webhooks'
    | '/mutations/$mutationId/'
    | '/settings/account/'
    | '/settings/workspace/';
  fileRoutesById: FileRoutesById;
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute;
  SettingsRouteRoute: typeof SettingsRouteRouteWithChildren;
  AdminRoute: typeof AdminRoute;
  CheckEmailRoute: typeof CheckEmailRoute;
  CreateMutationRoute: typeof CreateMutationRoute;
  ForgotPasswordRoute: typeof ForgotPasswordRoute;
  JoinRoute: typeof JoinRoute;
  LoginRoute: typeof LoginRoute;
  RegisterRoute: typeof RegisterRoute;
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute;
  AuthVerifyEmailRoute: typeof AuthVerifyEmailRoute;
  MutationsIndexRoute: typeof MutationsIndexRoute;
  MutationsMutationIdEditRoute: typeof MutationsMutationIdEditRoute;
  MutationsMutationIdIndexRoute: typeof MutationsMutationIdIndexRoute;
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register';
      path: '/register';
      fullPath: '/register';
      preLoaderRoute: typeof RegisterRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/login': {
      id: '/login';
      path: '/login';
      fullPath: '/login';
      preLoaderRoute: typeof LoginRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/join': {
      id: '/join';
      path: '/join';
      fullPath: '/join';
      preLoaderRoute: typeof JoinRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/forgot-password': {
      id: '/forgot-password';
      path: '/forgot-password';
      fullPath: '/forgot-password';
      preLoaderRoute: typeof ForgotPasswordRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/create-mutation': {
      id: '/create-mutation';
      path: '/create-mutation';
      fullPath: '/create-mutation';
      preLoaderRoute: typeof CreateMutationRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/check-email': {
      id: '/check-email';
      path: '/check-email';
      fullPath: '/check-email';
      preLoaderRoute: typeof CheckEmailRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/admin': {
      id: '/admin';
      path: '/admin';
      fullPath: '/admin';
      preLoaderRoute: typeof AdminRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/settings': {
      id: '/settings';
      path: '/settings';
      fullPath: '/settings';
      preLoaderRoute: typeof SettingsRouteRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/settings/': {
      id: '/settings/';
      path: '/';
      fullPath: '/settings/';
      preLoaderRoute: typeof SettingsIndexRouteImport;
      parentRoute: typeof SettingsRouteRoute;
    };
    '/mutations/': {
      id: '/mutations/';
      path: '/mutations';
      fullPath: '/mutations';
      preLoaderRoute: typeof MutationsIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/auth/verify-email': {
      id: '/auth/verify-email';
      path: '/auth/verify-email';
      fullPath: '/auth/verify-email';
      preLoaderRoute: typeof AuthVerifyEmailRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/auth/reset-password': {
      id: '/auth/reset-password';
      path: '/auth/reset-password';
      fullPath: '/auth/reset-password';
      preLoaderRoute: typeof AuthResetPasswordRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/settings/workspace': {
      id: '/settings/workspace';
      path: '/workspace';
      fullPath: '/settings/workspace';
      preLoaderRoute: typeof SettingsWorkspaceRouteRouteImport;
      parentRoute: typeof SettingsRouteRoute;
    };
    '/settings/account': {
      id: '/settings/account';
      path: '/account';
      fullPath: '/settings/account';
      preLoaderRoute: typeof SettingsAccountRouteRouteImport;
      parentRoute: typeof SettingsRouteRoute;
    };
    '/settings/workspace/': {
      id: '/settings/workspace/';
      path: '/';
      fullPath: '/settings/workspace/';
      preLoaderRoute: typeof SettingsWorkspaceIndexRouteImport;
      parentRoute: typeof SettingsWorkspaceRouteRoute;
    };
    '/settings/account/': {
      id: '/settings/account/';
      path: '/';
      fullPath: '/settings/account/';
      preLoaderRoute: typeof SettingsAccountIndexRouteImport;
      parentRoute: typeof SettingsAccountRouteRoute;
    };
    '/mutations/$mutationId/': {
      id: '/mutations/$mutationId/';
      path: '/mutations/$mutationId';
      fullPath: '/mutations/$mutationId';
      preLoaderRoute: typeof MutationsMutationIdIndexRouteImport;
      parentRoute: typeof rootRouteImport;
    };
    '/settings/workspace/webhooks': {
      id: '/settings/workspace/webhooks';
      path: '/webhooks';
      fullPath: '/settings/workspace/webhooks';
      preLoaderRoute: typeof SettingsWorkspaceWebhooksRouteImport;
      parentRoute: typeof SettingsWorkspaceRouteRoute;
    };
    '/settings/workspace/members': {
      id: '/settings/workspace/members';
      path: '/members';
      fullPath: '/settings/workspace/members';
      preLoaderRoute: typeof SettingsWorkspaceMembersRouteImport;
      parentRoute: typeof SettingsWorkspaceRouteRoute;
    };
    '/settings/workspace/api-keys': {
      id: '/settings/workspace/api-keys';
      path: '/api-keys';
      fullPath: '/settings/workspace/api-keys';
      preLoaderRoute: typeof SettingsWorkspaceApiKeysRouteImport;
      parentRoute: typeof SettingsWorkspaceRouteRoute;
    };
    '/settings/account/security': {
      id: '/settings/account/security';
      path: '/security';
      fullPath: '/settings/account/security';
      preLoaderRoute: typeof SettingsAccountSecurityRouteImport;
      parentRoute: typeof SettingsAccountRouteRoute;
    };
    '/settings/account/profile': {
      id: '/settings/account/profile';
      path: '/profile';
      fullPath: '/settings/account/profile';
      preLoaderRoute: typeof SettingsAccountProfileRouteImport;
      parentRoute: typeof SettingsAccountRouteRoute;
    };
    '/settings/account/appearance': {
      id: '/settings/account/appearance';
      path: '/appearance';
      fullPath: '/settings/account/appearance';
      preLoaderRoute: typeof SettingsAccountAppearanceRouteImport;
      parentRoute: typeof SettingsAccountRouteRoute;
    };
    '/mutations/$mutationId/edit': {
      id: '/mutations/$mutationId/edit';
      path: '/mutations/$mutationId/edit';
      fullPath: '/mutations/$mutationId/edit';
      preLoaderRoute: typeof MutationsMutationIdEditRouteImport;
      parentRoute: typeof rootRouteImport;
    };
  }
}

interface SettingsAccountRouteRouteChildren {
  SettingsAccountAppearanceRoute: typeof SettingsAccountAppearanceRoute;
  SettingsAccountProfileRoute: typeof SettingsAccountProfileRoute;
  SettingsAccountSecurityRoute: typeof SettingsAccountSecurityRoute;
  SettingsAccountIndexRoute: typeof SettingsAccountIndexRoute;
}

const SettingsAccountRouteRouteChildren: SettingsAccountRouteRouteChildren = {
  SettingsAccountAppearanceRoute: SettingsAccountAppearanceRoute,
  SettingsAccountProfileRoute: SettingsAccountProfileRoute,
  SettingsAccountSecurityRoute: SettingsAccountSecurityRoute,
  SettingsAccountIndexRoute: SettingsAccountIndexRoute,
};

const SettingsAccountRouteRouteWithChildren =
  SettingsAccountRouteRoute._addFileChildren(SettingsAccountRouteRouteChildren);

interface SettingsWorkspaceRouteRouteChildren {
  SettingsWorkspaceApiKeysRoute: typeof SettingsWorkspaceApiKeysRoute;
  SettingsWorkspaceMembersRoute: typeof SettingsWorkspaceMembersRoute;
  SettingsWorkspaceWebhooksRoute: typeof SettingsWorkspaceWebhooksRoute;
  SettingsWorkspaceIndexRoute: typeof SettingsWorkspaceIndexRoute;
}

const SettingsWorkspaceRouteRouteChildren: SettingsWorkspaceRouteRouteChildren =
  {
    SettingsWorkspaceApiKeysRoute: SettingsWorkspaceApiKeysRoute,
    SettingsWorkspaceMembersRoute: SettingsWorkspaceMembersRoute,
    SettingsWorkspaceWebhooksRoute: SettingsWorkspaceWebhooksRoute,
    SettingsWorkspaceIndexRoute: SettingsWorkspaceIndexRoute,
  };

const SettingsWorkspaceRouteRouteWithChildren =
  SettingsWorkspaceRouteRoute._addFileChildren(
    SettingsWorkspaceRouteRouteChildren,
  );

interface SettingsRouteRouteChildren {
  SettingsAccountRouteRoute: typeof SettingsAccountRouteRouteWithChildren;
  SettingsWorkspaceRouteRoute: typeof SettingsWorkspaceRouteRouteWithChildren;
  SettingsIndexRoute: typeof SettingsIndexRoute;
}

const SettingsRouteRouteChildren: SettingsRouteRouteChildren = {
  SettingsAccountRouteRoute: SettingsAccountRouteRouteWithChildren,
  SettingsWorkspaceRouteRoute: SettingsWorkspaceRouteRouteWithChildren,
  SettingsIndexRoute: SettingsIndexRoute,
};

const SettingsRouteRouteWithChildren = SettingsRouteRoute._addFileChildren(
  SettingsRouteRouteChildren,
);

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SettingsRouteRoute: SettingsRouteRouteWithChildren,
  AdminRoute: AdminRoute,
  CheckEmailRoute: CheckEmailRoute,
  CreateMutationRoute: CreateMutationRoute,
  ForgotPasswordRoute: ForgotPasswordRoute,
  JoinRoute: JoinRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthVerifyEmailRoute: AuthVerifyEmailRoute,
  MutationsIndexRoute: MutationsIndexRoute,
  MutationsMutationIdEditRoute: MutationsMutationIdEditRoute,
  MutationsMutationIdIndexRoute: MutationsMutationIdIndexRoute,
};
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>();
